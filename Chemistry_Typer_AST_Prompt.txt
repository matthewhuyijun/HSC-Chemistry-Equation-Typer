# 🤖 AI Prompt: Rewrite Chemistry Typer (Word UnicodeMath Conversion) Using AST

## 🎯 Objective
Revise the **Chemistry Typer project** so it uses an **AST (Abstract Syntax Tree)** for parsing and conversion, instead of Regex.  
Keep **all UI design, buttons, and layout identical** — only improve the **conversion logic** that turns plain or LaTeX-style input into **Word UnicodeMath**.

---

## 🧠 Project Purpose
This tool converts chemical formulas and equations into **Word UnicodeMath** syntax, so that users can paste results directly into Microsoft Word Equation Editor — fully editable and correctly formatted.

Common problems in the current (Regex-based) version:
- States `(s), (l), (g), (aq)` sometimes get merged into subscripts.
- Brackets and nested groups (like `Fe(OH)3` or `Ca3(PO4)2`) often break.
- Superscripts/subscripts don’t terminate cleanly without manual spaces.
- Arrow labels (`→^(heat)` or `→_(Pt)`) are fragile.
- Adding new syntax requires rewriting many regexes.

---

## 🌳 AST Implementation Plan

### 1️⃣ Tokenization
Split input into tokens:
- Elements: `Na`, `Fe`, `Cl`, `O`
- Numbers: `2`, `3`, `4`
- Parentheses: `(`, `)`
- Arrows: `→`, `⇌`, `←`
- States: `(s)`, `(l)`, `(g)`, `(aq)`
- Superscripts/Subscripts: `^`, `_`
- Plus sign and dots: `+`, `·`

### 2️⃣ AST Structure
Build a hierarchical tree, e.g.:
```
Reaction
 ├── Reactants
 │   ├── Species: Fe(OH)3 (s)
 │   └── Species: 3HCl (aq)
 ├── Arrow: →
 └── Products
     ├── Species: FeCl3 (aq)
     └── Species: 3H2O (l)
```

### 3️⃣ Conversion Rules (AST → UnicodeMath)
| Component | UnicodeMath Output | Example |
|------------|--------------------|----------|
| Subscript | `_()` + space | `H_2O ` |
| Superscript | `^()` + space | `SO_4^(2-) ` |
| Grouped ions | `( )` preserved | `Fe(OH)_3` |
| Arrow | `→`, `⇌`, etc. | `A + B → C` |
| Arrow top label | `→^(heat)` | heat condition |
| Arrow bottom label | `→_(Pt)` | catalyst |
| State symbols | plain baseline | `(s)`, `(l)`, `(aq)` |
| Spacing | Always add 1 space after `_()` and `^()` | Prevents Word merging errors |

### 4️⃣ Spacing Rules (Critical)
After each `_()` or `^()`, insert **one space**.  
✅ Example:
```
Fe(OH)_3 (s)
NaCl (aq)
SO_4^(2-) (aq)
```
Without space, Word merges `(s)` into subscript.

### 5️⃣ Common Ion Replacement Table
Before AST parsing, auto-replace common ions and compounds for convenience.

| Input | Output |
|--------|---------|
| SO4 | `SO_4` |
| CO3 | `CO_3` |
| NO3 | `NO_3` |
| PO4 | `PO_4` |
| OH- | `OH^(-)` |
| Na+ | `Na^(+)` |
| Fe(OH)3 | `Fe(OH)_3` |
| CuSO4 | `CuSO_4` |
| H2O | `H_2O` |

This improves typing speed for HSC Chemistry students.

### 6️⃣ Arrow and Label Handling
Use Word’s UnicodeMath syntax for directional arrows and conditions.

| Input | Output |
|--------|---------|
| -> | `→` |
| <-> | `⇌` |
| ->(heat) | `→^(heat)` |
| ->(Pt) | `→_(Pt)` |
| ->(Pt, Δ) | `→_(Pt)^(Δ)` |

Supports combinations and stacked labels.

### 7️⃣ State Symbols (Baseline)
Keep `(s)`, `(l)`, `(g)`, `(aq)` outside subscript groups and **on the baseline**.
Example:
```
Fe(OH)_3 (s)
H_2O (l)
NaCl (aq)
```

---

## ✅ Expected Output Example

**Input:**
```
Fe(OH)3(s) + 3HCl(aq) -> FeCl3(aq) + 3H2O(l)
```

**Output (Word UnicodeMath):**
```
Fe(OH)_3 (s) + 3HCl (aq) → FeCl_3 (aq) + 3H_2O (l)
```

Pastes into Word as a fully editable equation — with correct subscript, baseline states, and spacing.

---

## 💡 Deliverable
A rewritten JavaScript conversion logic that:
1. Uses AST to structure parsing.  
2. Applies conversion rules to generate correct UnicodeMath.  
3. Includes auto-replacement for common ions.  
4. Keeps the same UI, buttons, and layout as before.  
5. Adds optional “Calculation Bar” with `\placeholder{}^\placeholder{}`, `\placeholder{}^2`, and `(a&b)` buttons.

---

## 🧾 Notes
- No UI redesigns — use existing HTML/CSS exactly as-is.  
- Test with equations containing multiple states, arrows, and ion groups.  
- Ensure spacing and brackets appear identical to the original version.
